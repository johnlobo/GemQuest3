                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Mac OS X x86_64)
                              4 ;--------------------------------------------------------
                              5 	.module BoardManager
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _man_board_render
                             12 	.globl _man_board_update
                             13 	.globl _man_board_init
                             14 	.globl _man_board_create
                             15 	.globl _cpct_getRandom_mxor_u8
                             16 	.globl _cpct_getScreenPtr
                             17 	.globl _cpct_drawSolidBox
                             18 	.globl _cpct_drawSpriteBlended
                             19 	.globl _board
                             20 	.globl _tiles
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
   0000                      28 _board::
   0000                      29 	.ds 152
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;src/man/BoardManager.c:18: void man_board_create(){
                             55 ;	---------------------------------
                             56 ; Function man_board_create
                             57 ; ---------------------------------
   0000                      58 _man_board_create::
                             59 ;src/man/BoardManager.c:21: for (j=0; j<12; j++){
   0000 0E 00         [ 7]   60 	ld	c, #0x00
                             61 ;src/man/BoardManager.c:22: for (i=0; i<12; i++){
   0002                      62 00109$:
   0002 69            [ 4]   63 	ld	l, c
   0003 29            [11]   64 	add	hl, hl
   0004 09            [11]   65 	add	hl, bc
   0005 29            [11]   66 	add	hl, hl
   0006 29            [11]   67 	add	hl, hl
   0007 3Er00         [ 7]   68 	ld	a, #<(_board)
   0009 85            [ 4]   69 	add	a, l
   000A 5F            [ 4]   70 	ld	e, a
   000B 3Es00         [ 7]   71 	ld	a, #>(_board)
   000D CE 00         [ 7]   72 	adc	a, #0x00
   000F 57            [ 4]   73 	ld	d, a
   0010 06 00         [ 7]   74 	ld	b, #0x00
   0012                      75 00103$:
                             76 ;src/man/BoardManager.c:23: board.cells[j][i] = 255;
   0012 68            [ 4]   77 	ld	l,b
   0013 26 00         [ 7]   78 	ld	h,#0x00
   0015 19            [11]   79 	add	hl, de
   0016 36 FF         [10]   80 	ld	(hl), #0xff
                             81 ;src/man/BoardManager.c:22: for (i=0; i<12; i++){
   0018 04            [ 4]   82 	inc	b
   0019 78            [ 4]   83 	ld	a, b
   001A D6 0C         [ 7]   84 	sub	a, #0x0c
   001C 38 F4         [12]   85 	jr	C,00103$
                             86 ;src/man/BoardManager.c:21: for (j=0; j<12; j++){
   001E 0C            [ 4]   87 	inc	c
   001F 79            [ 4]   88 	ld	a, c
   0020 D6 0C         [ 7]   89 	sub	a, #0x0c
   0022 38 DE         [12]   90 	jr	C,00109$
   0024 C9            [10]   91 	ret
   0025                      92 _tiles:
   0025r00r00                93 	.dw _sp_tiles_0
   0027r00r00                94 	.dw _sp_tiles_1
   0029r00r00                95 	.dw _sp_tiles_2
   002Br00r00                96 	.dw _sp_tiles_3
   002Dr00r00                97 	.dw _sp_tiles_4
   002Fr00r00                98 	.dw _sp_tiles_5
   0031r00r00                99 	.dw _sp_tiles_6
   0033r00r00               100 	.dw _sp_tiles_7
   0035r00r00               101 	.dw _sp_tiles_8
                            102 ;src/man/BoardManager.c:34: void man_board_init(u8 x, u8 y, u8 width, u8 height){
                            103 ;	---------------------------------
                            104 ; Function man_board_init
                            105 ; ---------------------------------
   0037                     106 _man_board_init::
   0037 DD E5         [15]  107 	push	ix
   0039 DD 21 00 00   [14]  108 	ld	ix,#0
   003D DD 39         [15]  109 	add	ix,sp
   003F F5            [11]  110 	push	af
   0040 F5            [11]  111 	push	af
                            112 ;src/man/BoardManager.c:37: board.width = width;
   0041 01r90r00      [10]  113 	ld	bc, #_board + 144
   0044 DD 7E 06      [19]  114 	ld	a, 6 (ix)
   0047 02            [ 7]  115 	ld	(bc), a
                            116 ;src/man/BoardManager.c:38: board.height = height;
   0048 21r91r00      [10]  117 	ld	hl, #(_board + 0x0091)
   004B DD 7E 07      [19]  118 	ld	a, 7 (ix)
   004E 77            [ 7]  119 	ld	(hl), a
                            120 ;src/man/BoardManager.c:39: board.x = x;
   004F 21r92r00      [10]  121 	ld	hl, #(_board + 0x0092)
   0052 DD 7E 04      [19]  122 	ld	a, 4 (ix)
   0055 77            [ 7]  123 	ld	(hl), a
                            124 ;src/man/BoardManager.c:40: board.y = y;
   0056 21r93r00      [10]  125 	ld	hl, #(_board + 0x0093)
   0059 DD 7E 05      [19]  126 	ld	a, 5 (ix)
   005C 77            [ 7]  127 	ld	(hl), a
                            128 ;src/man/BoardManager.c:41: board.activeCell.active = 0;
   005D 21r97r00      [10]  129 	ld	hl, #(_board + 0x0097)
   0060 36 00         [10]  130 	ld	(hl), #0x00
                            131 ;src/man/BoardManager.c:43: for (j=0; j<board.width; j++){
   0062 16 00         [ 7]  132 	ld	d, #0x00
   0064                     133 00107$:
   0064 0A            [ 7]  134 	ld	a, (bc)
   0065 5F            [ 4]  135 	ld	e, a
   0066 7A            [ 4]  136 	ld	a, d
   0067 93            [ 4]  137 	sub	a, e
   0068 30 48         [12]  138 	jr	NC,00109$
                            139 ;src/man/BoardManager.c:44: for (i=0; i<board.height; i++){
   006A 6A            [ 4]  140 	ld	l, d
   006B 5D            [ 4]  141 	ld	e, l
   006C 29            [11]  142 	add	hl, hl
   006D 19            [11]  143 	add	hl, de
   006E 29            [11]  144 	add	hl, hl
   006F 29            [11]  145 	add	hl, hl
   0070 3Er00         [ 7]  146 	ld	a, #<(_board)
   0072 85            [ 4]  147 	add	a, l
   0073 DD 77 FE      [19]  148 	ld	-2 (ix), a
   0076 3Es00         [ 7]  149 	ld	a, #>(_board)
   0078 CE 00         [ 7]  150 	adc	a, #0x00
   007A DD 77 FF      [19]  151 	ld	-1 (ix), a
   007D 1E 00         [ 7]  152 	ld	e, #0x00
   007F                     153 00104$:
   007F 21r91r00      [10]  154 	ld	hl, #(_board + 0x0091) + 0
   0082 6E            [ 7]  155 	ld	l, (hl)
   0083 7B            [ 4]  156 	ld	a, e
   0084 95            [ 4]  157 	sub	a, l
   0085 30 28         [12]  158 	jr	NC,00108$
                            159 ;src/man/BoardManager.c:45: board.cells[j][i] = (cpct_rand8() % NUM_COLORS);
   0087 DD 7E FE      [19]  160 	ld	a, -2 (ix)
   008A 83            [ 4]  161 	add	a, e
   008B DD 77 FC      [19]  162 	ld	-4 (ix), a
   008E DD 7E FF      [19]  163 	ld	a, -1 (ix)
   0091 CE 00         [ 7]  164 	adc	a, #0x00
   0093 DD 77 FD      [19]  165 	ld	-3 (ix), a
   0096 C5            [11]  166 	push	bc
   0097 D5            [11]  167 	push	de
   0098 CDr00r00      [17]  168 	call	_cpct_getRandom_mxor_u8
   009B 65            [ 4]  169 	ld	h, l
   009C 3E 06         [ 7]  170 	ld	a, #0x06
   009E F5            [11]  171 	push	af
   009F 33            [ 6]  172 	inc	sp
   00A0 E5            [11]  173 	push	hl
   00A1 33            [ 6]  174 	inc	sp
   00A2 CDr00r00      [17]  175 	call	__moduchar
   00A5 F1            [10]  176 	pop	af
   00A6 7D            [ 4]  177 	ld	a, l
   00A7 D1            [10]  178 	pop	de
   00A8 C1            [10]  179 	pop	bc
   00A9 E1            [10]  180 	pop	hl
   00AA E5            [11]  181 	push	hl
   00AB 77            [ 7]  182 	ld	(hl), a
                            183 ;src/man/BoardManager.c:44: for (i=0; i<board.height; i++){
   00AC 1C            [ 4]  184 	inc	e
   00AD 18 D0         [12]  185 	jr	00104$
   00AF                     186 00108$:
                            187 ;src/man/BoardManager.c:43: for (j=0; j<board.width; j++){
   00AF 14            [ 4]  188 	inc	d
   00B0 18 B2         [12]  189 	jr	00107$
   00B2                     190 00109$:
   00B2 DD F9         [10]  191 	ld	sp, ix
   00B4 DD E1         [14]  192 	pop	ix
   00B6 C9            [10]  193 	ret
                            194 ;src/man/BoardManager.c:59: void man_board_update(){
                            195 ;	---------------------------------
                            196 ; Function man_board_update
                            197 ; ---------------------------------
   00B7                     198 _man_board_update::
                            199 ;src/man/BoardManager.c:61: }
   00B7 C9            [10]  200 	ret
                            201 ;src/man/BoardManager.c:69: void man_board_render(){
                            202 ;	---------------------------------
                            203 ; Function man_board_render
                            204 ; ---------------------------------
   00B8                     205 _man_board_render::
   00B8 DD E5         [15]  206 	push	ix
   00BA DD 21 00 00   [14]  207 	ld	ix,#0
   00BE DD 39         [15]  208 	add	ix,sp
   00C0 F5            [11]  209 	push	af
   00C1 F5            [11]  210 	push	af
   00C2 3B            [ 6]  211 	dec	sp
                            212 ;src/man/BoardManager.c:73: for (j=0; j<board.height; j++){
   00C3 DD 36 FB 00   [19]  213 	ld	-5 (ix), #0x00
   00C7                     214 00110$:
   00C7 21r91r00      [10]  215 	ld	hl, #_board + 145
   00CA DD 7E FB      [19]  216 	ld	a,-5 (ix)
   00CD 96            [ 7]  217 	sub	a,(hl)
   00CE D2r5Er01      [10]  218 	jp	NC, 00112$
                            219 ;src/man/BoardManager.c:74: for (i=0; i<board.width; i++){
   00D1 DD 7E FB      [19]  220 	ld	a, -5 (ix)
   00D4 4F            [ 4]  221 	ld	c, a
   00D5 87            [ 4]  222 	add	a, a
   00D6 81            [ 4]  223 	add	a, c
   00D7 87            [ 4]  224 	add	a, a
   00D8 87            [ 4]  225 	add	a, a
   00D9 81            [ 4]  226 	add	a, c
   00DA DD 77 FF      [19]  227 	ld	-1 (ix), a
   00DD DD 6E FB      [19]  228 	ld	l, -5 (ix)
   00E0 4D            [ 4]  229 	ld	c, l
   00E1 29            [11]  230 	add	hl, hl
   00E2 09            [11]  231 	add	hl, bc
   00E3 29            [11]  232 	add	hl, hl
   00E4 29            [11]  233 	add	hl, hl
   00E5 3Er00         [ 7]  234 	ld	a, #<(_board)
   00E7 85            [ 4]  235 	add	a, l
   00E8 DD 77 FD      [19]  236 	ld	-3 (ix), a
   00EB 3Es00         [ 7]  237 	ld	a, #>(_board)
   00ED CE 00         [ 7]  238 	adc	a, #0x00
   00EF DD 77 FE      [19]  239 	ld	-2 (ix), a
   00F2 0E 00         [ 7]  240 	ld	c, #0x00
   00F4                     241 00107$:
   00F4 21r90r00      [10]  242 	ld	hl, #_board + 144
   00F7 46            [ 7]  243 	ld	b, (hl)
   00F8 79            [ 4]  244 	ld	a, c
   00F9 90            [ 4]  245 	sub	a, b
   00FA 30 5C         [12]  246 	jr	NC,00111$
                            247 ;src/man/BoardManager.c:75: vmem = cpct_getScreenPtr (CPCT_VMEM_START, board.x + (i*5), board.y + (j*13));
   00FC 3Ar93r00      [13]  248 	ld	a,(#_board + 147)
   00FF DD 86 FF      [19]  249 	add	a, -1 (ix)
   0102 57            [ 4]  250 	ld	d, a
   0103 21r92r00      [10]  251 	ld	hl, #_board + 146
   0106 46            [ 7]  252 	ld	b, (hl)
   0107 69            [ 4]  253 	ld	l, c
   0108 29            [11]  254 	add	hl, hl
   0109 29            [11]  255 	add	hl, hl
   010A 09            [11]  256 	add	hl, bc
   010B 78            [ 4]  257 	ld	a, b
   010C 85            [ 4]  258 	add	a, l
   010D 47            [ 4]  259 	ld	b, a
   010E C5            [11]  260 	push	bc
   010F 58            [ 4]  261 	ld	e, b
   0110 D5            [11]  262 	push	de
   0111 21 00 C0      [10]  263 	ld	hl, #0xc000
   0114 E5            [11]  264 	push	hl
   0115 CDr00r00      [17]  265 	call	_cpct_getScreenPtr
   0118 C1            [10]  266 	pop	bc
   0119 E5            [11]  267 	push	hl
   011A FD E1         [14]  268 	pop	iy
                            269 ;src/man/BoardManager.c:77: if (board.cells[j][i]!=255){
   011C DD 6E FD      [19]  270 	ld	l,-3 (ix)
   011F DD 66 FE      [19]  271 	ld	h,-2 (ix)
   0122 06 00         [ 7]  272 	ld	b, #0x00
   0124 09            [11]  273 	add	hl, bc
   0125 7E            [ 7]  274 	ld	a, (hl)
                            275 ;src/man/BoardManager.c:78: cpct_drawSpriteBlended(vmem, SP_TILES_0_H, SP_TILES_0_W, tiles[board.cells[j][i]]); // Faster Sprites with XOR
                            276 ;src/man/BoardManager.c:77: if (board.cells[j][i]!=255){
   0126 DD 77 FC      [19]  277 	ld	-4 (ix), a
   0129 3C            [ 4]  278 	inc	a
   012A 28 1B         [12]  279 	jr	Z,00102$
                            280 ;src/man/BoardManager.c:78: cpct_drawSpriteBlended(vmem, SP_TILES_0_H, SP_TILES_0_W, tiles[board.cells[j][i]]); // Faster Sprites with XOR
   012C DD 6E FC      [19]  281 	ld	l, -4 (ix)
   012F 26 00         [ 7]  282 	ld	h, #0x00
   0131 29            [11]  283 	add	hl, hl
   0132 11r25r00      [10]  284 	ld	de, #_tiles
   0135 19            [11]  285 	add	hl, de
   0136 5E            [ 7]  286 	ld	e, (hl)
   0137 23            [ 6]  287 	inc	hl
   0138 56            [ 7]  288 	ld	d, (hl)
   0139 C5            [11]  289 	push	bc
   013A D5            [11]  290 	push	de
   013B 21 0C 04      [10]  291 	ld	hl, #0x040c
   013E E5            [11]  292 	push	hl
   013F FD E5         [15]  293 	push	iy
   0141 CDr00r00      [17]  294 	call	_cpct_drawSpriteBlended
   0144 C1            [10]  295 	pop	bc
   0145 18 0E         [12]  296 	jr	00108$
   0147                     297 00102$:
                            298 ;src/man/BoardManager.c:80: cpct_drawSolidBox (vmem, 0, SP_TILES_0_W, SP_TILES_0_H);	
   0147 C5            [11]  299 	push	bc
   0148 21 04 0C      [10]  300 	ld	hl, #0x0c04
   014B E5            [11]  301 	push	hl
   014C AF            [ 4]  302 	xor	a, a
   014D F5            [11]  303 	push	af
   014E 33            [ 6]  304 	inc	sp
   014F FD E5         [15]  305 	push	iy
   0151 CDr00r00      [17]  306 	call	_cpct_drawSolidBox
   0154 C1            [10]  307 	pop	bc
   0155                     308 00108$:
                            309 ;src/man/BoardManager.c:74: for (i=0; i<board.width; i++){
   0155 0C            [ 4]  310 	inc	c
   0156 18 9C         [12]  311 	jr	00107$
   0158                     312 00111$:
                            313 ;src/man/BoardManager.c:73: for (j=0; j<board.height; j++){
   0158 DD 34 FB      [23]  314 	inc	-5 (ix)
   015B C3rC7r00      [10]  315 	jp	00110$
   015E                     316 00112$:
   015E DD F9         [10]  317 	ld	sp, ix
   0160 DD E1         [14]  318 	pop	ix
   0162 C9            [10]  319 	ret
                            320 	.area _CODE
                            321 	.area _INITIALIZER
                            322 	.area _CABS (ABS)
